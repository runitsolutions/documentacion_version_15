ODOO 15 LOCAL HOST o VPS (Desarrollo o Producción) Update 17-10-2020

Instalar odoo 15 y servicios necesarios para la localización de CR
** La guía para desinstalar odoo esta al final de este instructivo **

Se recomienda altamente NO instalar odoo con el usuario root en un VPS cloud, ver el archivo de recomendaciones

1. Crear un servidor en su proveedor de servicios con ubuntu 18.04, 19.04 o 20.04
Actualizar ubuntu
sudo apt-get update && sudo apt-get upgrade -y

2. Instalar odoo15
Entrar al servidor o ir a la terminal local
Descargar el ejecutable odoo15.sh
sudo git clone https://github.com/runitsolutions/documentacion_version_15.git

Configurar los permisos del archivo
sudo chmod +x odoo15.sh

Ejecutar el archivo
./odoo15.sh
Darle Y o S y luego ENTER

*** si es instalación local para desarrollo, deshabilitar el inicio automatico de odoo ***
sudo service odoo15 stop
sudo systemctl disable odoo15
******************************************************************************************

3. Clonar los repositorios de los módulos
cd /opt/odoo15/extra-addons

Descargar los modulos de l10n_cr
sudo git clone https://github.com/runitsolutions/l10n_cr.git

4. Instalar requerimientos de runitsolutions
sudo pip3 install -r /opt/odoo15/extra-addons/l10n_cr/requirements.txt

5. Modificar el archivo conf de acuerdo a su ambiente
sudo vim /opt/odoo/config/odoo15.conf
Sustituir "vim" por el editor de texto de su elección

Agregar la ruta completa de los módulos personalizados y de l10n_cr al addons_path

Ejemplo:

addons_path =
    /opt/odoo15/odoo/addons,
    /opt/odoo15/odoo/odoo/addons,
    /opt/odoo15/extra-addons,
    /opt/odoo15/extra-addons/l10n_cr,
    /opt/odoo15/extra-addons/sus-addons-personalizados

Guardar cambios y reiniciar odoo
sudo service odoo15 restart

** SALIR de la terminal de ubuntu
exit y ENTER
--------------------------------------------------------------------------------------
******* SOLO PARA PRODUCCION CON PROXY *******
Instalar apache2 o nginx (opcional según sus requerimientos)
Para este instructivo usaremos apache2
sudo apt install apache2 -y
a2enmod proxy
a2enmod proxy_http
a2enmod headers

sudo service apache2 restart

*Para tener varias bases de datos en la misma instancia primero hacer el direccionamiento DNS
en su host, cloudflare o el servicio que utilice
** Recordar que se esta usando apache2 no nginx **

Agregar nuva BD
cd /etc/apache2/sites-available/
sudo nano COMPAÑIA.TUDOMINIO.com.conf

**pegar los datos del VIRTUALHOST y modificar la compañia

<VirtualHost *:80>
        ServerName COMPAÑIA.TUDOMINIO.com
        ServerAlias COMPAÑIA.TUDOMINIO.com

        ProxyPass  / http://localhost:8069/
        ProxyPassReverse  / http://localhost:8069/

        Header add X-ODOO_DBFILTER "COMPAÑIA"
        RequestHeader add X-ODOO_DBFILTER "COMPAÑIA"

        #RewriteEngine on
        #RewriteCond %{SERVER_NAME} =COMPAÑIA.TUDOMINIO.com
       # RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

PARA GUARDAR Y CERRAR

Habilitar sitio web en apache2
sudo a2ensite COMPAÑIA.TUDOMINIO.com.conf

Luego reiniciar apache2
sudo service apache2 reload

Para deshabilitar un sitio web en apache2
sudo a2dissite COMPAÑIA.TUDOMINIO.com.conf

** SALIR de la terminal de ubuntu
exit y ENTER

#################################################################

DESINSTALAR ODOO
* Detener servidor
* Borrar todos los archivos de odoo o (versión)
* Borrar postgresql

DETENER EL SERVICIO DE ODOO
  sudo service odoo15 stop
BORRAR LOS ARCHIVOS DE ODOO
  Borra todas las versiones
  sudo rm -R /opt/odoo
  Borra una versión (para multiversiones en desarrollo)
  sudo rm -R /opt/odoo/version (ej: 15.0)
BORRAR EL ARCHIVO CONF
  Borra una version especifica
  sudo rm -f /opt/odoo/version (ej: odoo15.conf)
  sudo update-rc.d -f odoo15 remove 

BORRAR USUARIO Y GRUPO
  sudo userdel -r postgres
  sudo groupdel postgres
BORRAR BASE DE DATOS
  sudo apt-get remove postgresql -y
  sudo apt-get --purge remove postgresql\* -y
  sudo rm -rf /etc/postgresql/
  sudo rm -rf /etc/postgresql-common/
  sudo rm -rf /var/lib/postgresql/
